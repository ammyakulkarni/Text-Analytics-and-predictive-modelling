library(randomForest)
library(caTools)
setwd("C:/Users/Amit Kulkarni/Documents/R Programming/text analytics")
RFdata= read.csv("Dataset.csv", header=TRUE)
deal.d = model.matrix(~deal -1, data=RFdata)
RFdata1 = data.frame(RFdata, deal.d)
set.seed(3000)
split = sample.split(RFdata1$dealTRUE, SplitRatio = 0.80)
RFtrain= subset(RFdata1, split==T)
RFtest= subset(RFdata1, split==F)
View(RFtrain)
RFtrain=subset(RFtrain, select=-c(1,2,4,5,6,7,11,17,18,19,20))
RFtest=subset(RFtest, select=-c(1,2,4,5,6,7,11,17,18,20))
RF<- randomForest(as.factor(dealTRUE)~., data=RFtrain,
                  ntree=28, mtry = 3, nodesize = 10, importance= TRUE)
print(RF)
plot(RF, main="")
legend("topright", c("OOB,0,1"), text.col = 1:6, lty = 1:3, col=1:3)
title(main="Error Rates Random Forest for RFDATA")

RF6<- randomForest(as.factor(dealTRUE)~., data=RFtrain,
                  ntree=28, mtry = 6, nodesize = 10, importance= TRUE)

print(RF6)
plot(RF6, main="")
legend("topright", c("OOB,0,1"), text.col = 1:6, lty = 1:3, col=1:3)
title(main="Error Rates Random Forest for RFDATA")

RF6$err.rate
impvar<- round(randomForest::importance(RF),2)
impvar[order(impvar[,3], decreasing =TRUE),]

tRF<- tuneRF(x=RFtrain[, -c(10)],
             y=as.factor(RFtrain$dealTRUE),
             mtrystart=3,
             ntreeTry = 101,
             stepFactor = 1.5,
             improve=0.001,
             trace= TRUE,
             plot=TRUE,
             doBest = TRUE,
             nodesize=10,
             importance=TRUE,
)

RFtrain$predict.class=predict(tRF, RFtrain, type="class")
RFtrain$predict.score=predict(tRF, RFtrain, type="prob")
